#mp.messaging.incoming.words-in.auto.offset.reset=earliest
#mp.messaging.incoming.words-in.topic=words
#mp.messaging.outgoing.words-out.topic=words



# Kafka configuration
# Kafka bootstrap servers
kafka.bootstrap.servers=localhost:9092

# Producer config
mp.messaging.outgoing.generated-messages.connector=smallrye-kafka
mp.messaging.outgoing.generated-messages.topic=demo-topic
mp.messaging.outgoing.generated-messages.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer config
mp.messaging.incoming.received-messages.connector=smallrye-kafka
mp.messaging.incoming.received-messages.topic=demo-topic
mp.messaging.incoming.received-messages.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.received-messages.group.id=my-group


# Postgres configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=password
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus-app-db
quarkus.hibernate-orm.database.generation=update

#h2
# JPA + H2
#quarkus.datasource.db-kind=h2
#quarkus.datasource.jdbc.url=jdbc:h2:mem:demo;DB_CLOSE_DELAY=-1
#quarkus.datasource.username=sa
#quarkus.datasource.password=sa
#quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.hibernate-orm.log.sql=true

#Activate Logging for Debugging
quarkus.log.category."io.smallrye.reactive.messaging".level=DEBUG
quarkus.hibernate-orm.log.sql=true
quarkus.log.level=INFO


#now not needed as going to use another approach
#putting test profile properties here

#%test.mp.messaging.connector.smallrye-kafka.mock=true
#
## Producer mock
#%test.mp.messaging.outgoing.generated-messages.connector=smallrye-kafka
#%test.mp.messaging.outgoing.generated-messages.topic=demo-topic
#
## Consumer mock
#%test.mp.messaging.incoming.received-messages.connector=smallrye-kafka
#%test.mp.messaging.incoming.received-messages.topic=demo-topic
#%test.mp.messaging.incoming.received-messages.group.id=test-group
#
##Kafka (via SmallRye) by default allows only one subscriber per @Incoming channel. If you want multiple subscribers (e.g. prod + test), you must enable broadcast. in test properties only
#%test.mp.messaging.incoming.received-messages.broadcast=true
#
## ? Disable unrelated real Kafka channels (if present)
## For example, if your app has other channels like 'words-in', disable or mock them:
#%test.mp.messaging.incoming.words-in.connector=smallrye-kafka
#%test.mp.messaging.incoming.words-in.topic=dummy-topic
#%test.mp.messaging.outgoing.words-out.connector=smallrye-kafka
#%test.mp.messaging.outgoing.words-out.topic=dummy-out


## Use H2 in-memory DB
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=sa

# Auto-create/drop schema for each test
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.log.sql=true



